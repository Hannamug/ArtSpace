<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hall">

<!-- INSERT -->
	<insert id="insert">
		insert into hall(hall_name, zip_code, address1, address2, hall_description, warning,
						create_date, area, width, length, height, maximum, user_id)
		values(#{hall_name}, #{zip_code}, #{address1}, #{address2}, #{hall_description}, #{warning},
					#{create_date}, #{area}, #{width}, #{length}, #{height}, #{maximum}, #{user_id})
					
			<selectKey keyProperty="hall_id" resultType="int" order="AFTER" >
				select LAST_INSERT_ID()
			</selectKey>	
					
	</insert>

	<insert id="insert_time">
		insert into hall_time(type, price, ischeck, hall_id)
		values(#{type}, #{price}, #{ischeck}, #{hall_id}) 
	</insert>

	<insert id="equi_insert">
		insert into equipment(hall_id, equip_type, equip_name, equip_num, equip_price)
		values(#{hall_id}, #{equip_type}, #{equip_name}, #{equip_num}, #{equip_price})
	</insert>

<!-- INSERT End -->

<!-- DELETE -->	
	<delete id="equi_delete_all">
		delete from equipment
		where hall_id = #{id}
	</delete>
	
	<delete id="delete">
		delete from hall
		where hall_id = #{id}
	</delete>

	<delete id="deleteAllTime">
		delete from hall_time
		where hall_id = #{hall_id}
	</delete>

<!-- DELETE End -->	
	
<!-- Update  -->
	<update id="update_info">
	   UPDATE hall
	      SET hall_name = #{hall_name},
	      	  zip_code = #{zip_code},
	          address1 = #{address1},
	          address2 = #{address2},
	          hall_description = #{hall_description},
	          warning = #{warning},
	          address1 = #{address1},
	          address2 = #{address2},
	          hall_description = #{hall_description},
	          warning = #{warning},
	          create_date = #{create_date},
	          area = #{area},
	          width = #{width},
	          length = #{length},
	          height = #{height},
	          maximum = #{maximum}
	       WHERE hall_id = #{hall_id}
	</update>	
	
	<update id="update_hall_time">
	   UPDATE hall_time
	      SET type = #{type},
		      price = #{price},
		      ischeck = #{ischeck}
	       WHERE hall_id = #{hall_id}
	</update>

<!-- Update End -->

<!-- SELECT  -->
	<select id="getHallList" resultType="com.example.demo.hall.dto.HallDTO">		
		select h.hall_id, h.hall_name, h.address1, h.create_date, h.views, h.user_id, min(ht.price) minPrice
		from hall h join hall_time ht
		on h.hall_id = ht.hall_id
		group by hall_id
		order by #{sort} desc
	</select>
	
	<select id="getHallTimeList" resultType="com.example.demo.hall.dto.HallTimeDTO">
		select *
		from hall_time
		where hall_id = #{id}
	</select>

	<select id="getEquiList" resultType="com.example.demo.hall.dto.EquipmentDTO">
		select * from equipment
		where hall_id = #{id}
		order by equip_type
	</select>
		<select id="findById" resultType="com.example.demo.hall.dto.HallDTO">
		select * from hall
		where hall_id = #{id}
	</select>
	
	
	<!-- 지역 필터 -->	
	<select id="getFilterList" resultType="com.example.demo.hall.dto.HallDTO">
		select h.hall_id, h.hall_name, h.address1, h.create_date, h.views, h.user_id, min(ht.price) minPrice
		  from hall h join hall_time ht
		    on h.hall_id = ht.hall_id 
			 where h.address1 regexp #{filter}
		group by hall_id
		order by h.create_date desc;
	</select> 
	
<!-- 	<select id="getFilterList" resultType="com.example.demo.hall.dto.HallDTO">
	    select h.hall_id, h.hall_name, h.address1, h.create_date, h.views, h.user_id, min(ht.price) minPrice
	    from hall h 
	    join hall_time ht on h.hall_id = ht.hall_id 
	    <where>
	        <if test="local_list != null and local_list.size() != 0">
	            and h.address1 regexp
	            <foreach collection="local_list" item="item" index="index" open="(" separator="|" close=")">
	                #{item}
	            </foreach>
	        </if>
	    </where>
	    group by h.hall_id, h.hall_name, h.address1, h.create_date, h.views, h.user_id
	    order by h.create_date desc;
	</select> -->
	

<!-- SELECT End -->

</mapper>